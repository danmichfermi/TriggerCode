component : ADDM4K2S19RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S18RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S31RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S30RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S11RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S10RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S13RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S12RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S15RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S14RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S17RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S16RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S8RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S9RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S12RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S13RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S10RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S11RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S14RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S15RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S28RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S29RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S24RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S25RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S26RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S27RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S20RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S21RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S22RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S23RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S9RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S8RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S2RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S3RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S4RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S5RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S6RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S7RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S1RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S0RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S3RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S2RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S5RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S4RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S7RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K2S6RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S0RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

component : ADDM4K3S1RAM 
    PORT
    (
        clock        : IN STD_LOGIC ;
        address        : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        q        : OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
    );
end component;

